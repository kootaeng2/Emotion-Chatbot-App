name: Sync to Hugging Face hub

on:
  push:
    branches: [main]

jobs:
  sync-to-hub:
    runs-on: ubuntu-latest
    steps:
      # 1. GitHub 저장소의 코드를 가져옵니다. (LFS 파일 포함)
      - uses: actions/checkout@v2 # 안정성을 위해 v2를 사용
        with:
          fetch-depth: 0
          lfs: false

      # 2. 깨끗한 버전의 내역을 만들어서 Hugging Face Hub에 푸시합니다.
      - name: Push clean history to Hugging Face Hub
        env:
          HF_TOKEN: ${{ secrets.TOKEN }}
        run: |
          # Git 사용자 정보 및 원격 저장소 설정 (기존과 동일)
          git config --global user.email "hf@example.com"
          git config --global user.name "Hugging Face"
          git remote add hf "https://huggingface.co/spaces/taehoon222/emotion-chatbot-app"
          git config --global credential.helper store
          echo "https://user:${OKEN}@huggingface.co" > $HOME/.git-credentials

          # .env 파일이 존재할 경우 강제 삭제하여 커밋에 포함되지 않도록 함
          rm -f .env

          # ▼▼▼▼▼ 핵심 수정 부분 ▼▼▼▼▼
          # 1. 현재 코드의 최종 상태만을 포함하는, 부모가 없는 새로운 브랜치(orphan branch)를 만듭니다.
          #    이것은 모든 과거 기록을 끊어내는 효과가 있습니다.
          git checkout --orphan clean-history

          # 2. 모든 파일을 이 새로운 브랜치에 추가합니다.
          git add -A

          # 3. 모든 파일을 하나의 새로운 커밋으로 만듭니다.
          git commit -m "Deploy clean snapshot of the repository"

          # 4. '오염된' main 브랜치 대신, '깨끗한' clean-history 브랜치를
          #    Hugging Face의 main 브랜치로 강제 푸시합니다.
          git push --force hf clean-history:main